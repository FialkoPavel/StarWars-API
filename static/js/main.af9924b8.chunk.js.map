{"version":3,"sources":["Components/ErrorMessage/ErrorImage.png","Components/Header/Header.styled.js","Components/Header/index.js","Components/Header/Header.js","Service/index.js","Service/SwapiService.js","Components/ErrorMessage/ErrorMessage.styled.js","Components/ErrorMessage/ErrorMessage.js","Components/Spinner/Spinner.styled.js","Components/Spinner/index.js","Components/Spinner/Spinner.js","Components/RandomPlanet/RandomPlanet.styled.js","Components/RandomPlanet/index.js","Components/RandomPlanet/RandomPlanet.js","Components/PeopleList/PeopleList.styled.js","Components/ErrorMessage/index.js","Components/PeopleList/index.js","Components/PeopleList/PeopleList.js","Components/PeopleDetails/PeopleDetails.styled.js","Components/PeopleDetails/index.js","Components/PeopleDetails/PeopleDetails.js","Components/PlanetList/index.js","Components/PlanetList/PlanetList.js","Components/PlanetDetails/index.js","Components/PlanetDetails/PlanetDetails.js","Components/Starships/index.js","Components/Starships/Starships.js","Components/StarshipDetails/StarshipDetails.js","Components/App/App.styled.js","Components/App/index.js","Components/App/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","StyledHeaderLink","Link","logo","Header","exact","to","Component","SwapiService","_apiBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","getPerson","id","getAllPlanets","getPlanet","getAllStarships","getStarship","match","StyledError","broken","StyledErrorImg","img","StyledErrorText","h1","ErrorMessage","src","icon","alt","StyledSpinnerWrapper","StyledSpinnerRingsWrapper","StyledSpinnerRings","Spinner","peopleList","StyledRandomPlanet","StyledList","ul","StyledImg","StyledListItem","li","planetName","StyledItemKey","span","RandomPlanet","intervalID","state","planet","population","rotationPeriod","diameter","orbitalPeriod","climate","surfaceWater","loading","error","swapi","getUpdatePlanet","randomID","Math","round","random","then","setState","name","rotation_period","orbital_period","surface_water","catch","getError","isBroken","this","setInterval","console","log","clearInterval","elements","label","value","map","el","i","key","imageBlock","onError","isLoading","Fragment","viewMessage","PureComponent","PeopleList","item","getItem","props","getData","length","isError","person","onClick","e","uniqueID","poepleList","StyledDetails","StyledDetailsImg","StyledDetailsList","StyledDetailsListItem","StyledName","PeopleDetails","data","people","pending","height","mass","hairColor","skinColor","eyeColor","birthYear","gender","serverImage","brokenImg","details","PlanetList","PlanetDetails","gravity","Starships","StarshipDetails","starships","model","manufacturer","cost","maxSpeed","crew","passengers","StyledApp","StyledRow","App","undefined","target","getAttribute","hair_color","skin_color","eye_color","birth_year","terrain","starship","cost_in_credits","max_atmosphering_speed","path","ReactDOM","render","document","getElementById"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,wC,mfCG3C,IAAMC,EAAeC,IAAOC,IAAV,KAQZC,EAAmBF,YAAOG,IAAPH,CAAH,KAEX,qBAAGI,KAAkB,YAAc,iBAC/B,qBAAGA,KAAkB,OAAS,QCb9BC,E,iLCKP,OACI,kBAACN,EAAD,KACI,kBAACG,EAAD,CAAkBE,KAAK,OAAOE,MAAM,OAAOC,GAAG,KAA9C,YACA,kBAACL,EAAD,CAAkBK,GAAG,WAArB,UACA,kBAACL,EAAD,CAAkBK,GAAG,YAArB,WACA,kBAACL,EAAD,CAAkBK,GAAG,cAArB,kB,GAPoBC,a,wBCHrBC,E,4DCCXC,SAAW,uB,KAEXC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACQC,MAAM,GAAD,OAAI,EAAKJ,UAAT,OAAoBE,IADjC,WACJG,EADI,QAEDC,GAFC,sBAGA,IAAIC,MAAM,0BAAmBL,GAAnB,qBACEG,EAAIG,SAJhB,uBAMGH,EAAII,OANP,mF,2DASdC,a,sBAAe,4BAAAP,EAAA,sEACO,EAAKF,YAAL,YADP,cACLI,EADK,yBAEJA,EAAIM,SAFA,2C,KAKfC,U,uCAAY,WAAOC,GAAP,SAAAV,EAAA,+EACD,EAAKF,YAAL,kBAA4BY,EAA5B,OADC,2C,2DAIZC,c,sBAAgB,4BAAAX,EAAA,sEACM,EAAKF,YAAL,aADN,cACNI,EADM,yBAELA,EAAIM,SAFC,2C,KAKhBI,U,uCAAY,WAAOF,GAAP,SAAAV,EAAA,sEACK,EAAKF,YAAL,mBAA6BY,EAA7B,MADL,mF,2DAIZG,gB,sBAAkB,4BAAAb,EAAA,sEACI,EAAKF,YAAL,eADJ,cACRI,EADQ,yBAEPA,EAAIM,SAFG,2C,KAKlBM,Y,uCAAc,WAAOJ,GAAP,SAAAV,EAAA,sEACG,EAAKF,YAAL,qBAA+BY,EAA/B,MADH,mF,2GAILX,GACL,OAAOA,EAAIgB,MAAM,eAAe,O,+kBCvCxC,IAAMC,EAAc7B,IAAOC,IAAV,KAED,qBAAG6B,OAAsB,WAAa,cAC3C,qBAAGA,OAAsB,MAAQ,SAChC,qBAAGA,OAAsB,MAAQ,SAEhC,qBAAGA,OAAsB,MAAQ,QAYxCC,EAAiB/B,IAAOgC,IAAV,KAMdC,EAAkBjC,IAAOkC,GAAV,K,iBCbNC,EATM,WACjB,OACI,kBAACN,EAAD,CAAaC,QAAM,GACf,kBAACC,EAAD,CAAgBK,IAAKC,IAAMC,IAAI,UAC/B,kBAACL,EAAD,4B,8gECNZ,IAAMM,EAAuBvC,IAAOC,IAAV,KAQpBuC,EAA4BxC,IAAOC,IAAV,KAQzBwC,EAAqBzC,IAAOC,IAAV,KChBTyC,ECCC,SAACC,GACf,OACE,kBAACJ,EAAD,CAAsBI,WAAYA,GAChC,kBAACH,EAAD,KACE,kBAACC,EAAD,MACA,kBAACA,EAAD,S,slCCNR,IAAMG,EAAqB5C,IAAOC,IAAV,KAUlB4C,EAAa7C,IAAO8C,GAAV,KAkBVC,EAAY/C,IAAOgC,IAAV,KAeTgB,EAAiBhD,IAAOiD,GAAV,KAEL,qBAAGC,WAA8B,OAAS,UACxC,qBAAGA,WAAwC,KAAT,UAM7CC,EAAgBnD,IAAOoD,KAAV,KCrDJC,E,2MCOXC,WAAa,E,EAWbC,MAAQ,CACJC,OAAQ,CACJjC,GAAI,KACJ2B,WAAY,KACZO,WAAY,KACZC,eAAgB,KAChBC,SAAU,KACVC,cAAe,KACfC,QAAS,KACTC,aAAc,MAElBC,SAAS,EACTC,OAAO,EACPlC,QAAQ,G,EAGZmC,MAAQ,IAAIxD,E,EAEZyD,gBAAkB,WACd,IAAMC,EAAWC,KAAKC,MAAoB,GAAdD,KAAKE,SAAc,GAE/C,EAAKL,MAAMxC,UAAU0C,GAChBI,MAAK,SAACxD,GAEH,EAAKyD,SAAS,CACVhB,OAAQ,CACJjC,GAAI4C,EACJjB,WAAYnC,EAAI0D,KAChBhB,WAAY1C,EAAI0C,WAChBC,eAAgB3C,EAAI2D,gBACpBf,SAAU5C,EAAI4C,SACdC,cAAe7C,EAAI4D,eACnBd,QAAS9C,EAAI8C,QACbC,aAAc/C,EAAI6D,eAEtBb,SAAS,EACTjC,QAAQ,OAGf+C,MAAM,EAAKC,W,EAGpBA,SAAW,WACP,EAAKN,SAAS,CACVR,OAAO,EACPD,SAAS,K,EAIjBgB,SAAW,WACP,EAAKP,SAAS,CACV1C,QAAQ,K,mFA3DZkD,KAAK1B,WAAa2B,YAAYD,KAAKd,gBAAiB,O,6CAIpDgB,QAAQC,IAAI,aACZC,cAAcJ,KAAK1B,c,+BA0Db,IAAD,EAGkE0B,KAAKzB,MAHvE,IAEGC,OAAUN,EAFb,EAEaA,WAAYO,EAFzB,EAEyBA,WAAYC,EAFrC,EAEqCA,eAAgBC,EAFrD,EAEqDA,SAAUpC,EAF/D,EAE+DA,GAChEqC,EAHC,EAGDA,cAAeC,EAHd,EAGcA,QAASC,EAHvB,EAGuBA,aAAgBC,EAHvC,EAGuCA,QAASC,EAHhD,EAGgDA,MAAOlC,EAHvD,EAGuDA,OAWtDuD,EATc,CAChB,CAACC,MAAO,eAAgBC,MAAO9B,GAC/B,CAAC6B,MAAO,oBAAqBC,MAAO7B,GACpC,CAAC4B,MAAO,aAAcC,MAAO5B,GAC7B,CAAC2B,MAAO,mBAAoBC,MAAO3B,GACnC,CAAC0B,MAAO,YAAaC,MAAO1B,GAC5B,CAACyB,MAAO,kBAAmBC,MAAOzB,IAGT0B,KAAI,SAACC,EAAIC,GAClC,OAAO,kBAAC1C,EAAD,CAAgB2C,IAAKD,GAAG,kBAACvC,EAAD,KAAiBsC,EAAGH,OAAyBG,EAAGF,UAe7EK,EAAa,kBAAC7C,EAAD,CAAW8C,QAASb,KAAKD,SAAU3C,IAAG,8DAAyDb,EAAzD,QAAmEe,IAAI,WAE1HwD,EAAY/B,EAAU,kBAAC,EAAD,MAAa,mBAdtB,WACf,OACI,kBAAC,IAAMgC,SAAP,KACKhB,EACD,kBAAClC,EAAD,KACI,kBAACG,EAAD,CAAgBE,YAAU,GAAGA,GAC5BmC,MAQwB,MACnCW,EAAehC,IAAUD,EAAW,kBAAC,EAAD,MAAkB+B,EACtDf,EAAWjD,EAAS,kBAAC,EAAD,MAAkB8D,EAE5C,OACI,kBAAChD,EAAD,KACKoD,O,GA1GyBC,iB,ytBCJ1C,IAAMpD,GAAa7C,IAAOC,IAAV,KAWV+C,GAAiBhD,IAAOoD,KAAV,KCZLjB,KCAA+D,G,2MCOXjC,MAAQ,IAAIxD,E,EAOZ8C,MAAQ,CACJ4C,KAAM,M,mFALNnB,KAAKoB,UACLpB,KAAKqB,MAAM/E,c,gCAOH,IAAD,QAEPgF,EADoBtB,KAAKqB,MAAjBC,WAEH/B,MAAK,SAAA4B,GACFA,EAAKI,OAAS,EACd,EAAK/B,SAAS,CAAE2B,KAAMA,S,+BAKxB,IAAD,OAEGA,EAASnB,KAAKzB,MAAd4C,KAFH,EAG0BnB,KAAKqB,MAA5B/E,EAHH,EAGGA,UAAWkF,EAHd,EAGcA,QACbC,EAAkB,OAATN,EACPA,EAAKX,KAAI,SAAAC,GAAE,OAAI,kBAAC,GAAD,CACXiB,QAAS,SAACC,GAAD,OAAOrF,EAAUqF,IAC1BhB,IAAK,EAAK1B,MAAM2C,SAASnB,EAAG7E,KAC5BW,GAAI,EAAK0C,MAAM2C,SAASnB,EAAG7E,MAAO6E,EAAGhB,SACzC,kBAAC,EAAD,CAASoC,YAAU,IAErBb,EAAcQ,EAAU,kBAAC,GAAD,MAAkBC,EAEhD,OACI,kBAAC,GAAD,KACKT,O,GAtCuBxF,a,88BCJxC,IAAMsG,GAAgB9G,IAAOC,IAAV,MAqBb8G,GAAmB/G,IAAOgC,IAAV,MAKhBgF,GAAoBhH,IAAO8C,GAAV,MAUjBmE,GAAwBjH,IAAOiD,GAAV,MAKrBiE,GAAalH,IAAOkC,GAAV,MC1CDiF,GCOO,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMrC,EAAc,EAAdA,SAC1B,GAAoB,OAAhBqC,EAAKC,QAAoBD,EAAKE,QA2B3B,CACH,IAAMtB,EAAcoB,EAAKpD,MAAQ,kBAAC,EAAD,MAAkB,kBAAC,EAAD,MACnD,OACI,kBAAC8C,GAAD,KACKd,GA/B+B,IAAD,EAE+DoB,EAA/FC,OAAS5C,EAFuB,EAEvBA,KAAM8C,EAFiB,EAEjBA,OAAQC,EAFS,EAETA,KAAMC,EAFG,EAEHA,UAAWC,EAFR,EAEQA,UAAWC,EAFnB,EAEmBA,SAAUC,EAF7B,EAE6BA,UAAWC,EAFxC,EAEwCA,OAAQtG,EAFhD,EAEgDA,GAAKO,EAAUsF,EAAVtF,OACtFgG,EACF,kBAACf,GAAD,CACIlB,QAAS,kBAAMd,KACf3C,IAAG,iEAA4Db,EAA5D,UACLwG,EAAYjG,EAAS,kBAAC,EAAD,CAAckG,SAAO,IAAKF,EAErD,OACI,kBAAChB,GAAD,KACI,kBAAC,IAAMf,SAAP,KACI,kBAACmB,GAAD,KAAazC,GACZsD,EACD,kBAACf,GAAD,KACI,kBAACC,GAAD,KAAuB,kBAAC9D,EAAD,iBAAwCoE,GAC/D,kBAACN,GAAD,KAAuB,kBAAC9D,EAAD,eAAsCqE,GAC7D,kBAACP,GAAD,KAAuB,kBAAC9D,EAAD,qBAA4CsE,GACnE,kBAACR,GAAD,KAAuB,kBAAC9D,EAAD,qBAA4CuE,GACnE,kBAACT,GAAD,KAAuB,kBAAC9D,EAAD,oBAA2CwE,GAClE,kBAACV,GAAD,KAAuB,kBAAC9D,EAAD,qBAA4CyE,GACnE,kBAACX,GAAD,KAAuB,kBAAC9D,EAAD,iBAAwC0E,OC7BxEI,G,2MCOXhE,MAAQ,IAAIxD,E,EAOZ8C,MAAQ,CACJ4C,KAAM,M,mFALNnB,KAAKoB,UACLpB,KAAKqB,MAAM5E,c,gCAOH,IAAD,QAEP6E,EADoBtB,KAAKqB,MAAjBC,WAEH/B,MAAK,SAAA4B,GACFA,EAAKI,OAAS,EACd,EAAK/B,SAAS,CAAE2B,KAAMA,S,+BAIxB,IAAD,OACGA,EAASnB,KAAKzB,MAAd4C,KADH,EAE0BnB,KAAKqB,MAA5B5E,EAFH,EAEGA,UAAW+E,EAFd,EAEcA,QACbhD,EAAkB,OAAT2C,EACXA,EAAKX,KAAI,SAAAC,GAAE,OAAI,kBAAC,GAAD,CACXiB,QAAS,SAACC,GAAD,OAAOlF,EAAUkF,IAC1BhB,IAAK,EAAK1B,MAAM2C,SAASnB,EAAG7E,KAC5BW,GAAI,EAAK0C,MAAM2C,SAASnB,EAAG7E,MAAO6E,EAAGhB,SACzC,kBAAC,EAAD,CAASoC,YAAU,IAEjBb,EAAcQ,EAAU,kBAAC,GAAD,MAAkBhD,EAEhD,OACI,kBAAC,GAAD,KACKwC,O,GApCQxF,aCLV0H,GCWO,SAAC,GAAwB,IAAtBd,EAAqB,EAArBA,KAAMrC,EAAe,EAAfA,SAC3B,GAAoB,OAAhBqC,EAAK5D,QAAoB4D,EAAKE,QAwC3B,CACH,IAAMtB,EAAcoB,EAAKpD,MAAQ,kBAAC,GAAD,MAAkB,kBAAC,EAAD,MACnD,OACI,kBAAC8C,GAAD,KACKd,GA5C+B,IAAD,EAMnCoB,EAJA5D,OACIN,EAH+B,EAG/BA,WAAYO,EAHmB,EAGnBA,WAAYC,EAHO,EAGPA,eACxBC,EAJ+B,EAI/BA,SAAUC,EAJqB,EAIrBA,cAAeC,EAJM,EAINA,QAASsE,EAJH,EAIGA,QAAS5G,EAJZ,EAIYA,GAC5CO,EACHsF,EADGtF,OAGDgG,EACF,kBAACf,GAAD,CACIvD,QAAM,EACNqC,QAAS,kBAAMd,KACf3C,IAAG,8DAAyDb,EAAzD,UACLwG,EAAYjG,EAAS,kBAAC,GAAD,CAAckG,SAAO,IAAKF,EAW/CzC,EATc,CAChB,CAACC,MAAO,eAAgBC,MAAO9B,GAC/B,CAAC6B,MAAO,oBAAqBC,MAAO7B,GACpC,CAAC4B,MAAO,aAAcC,MAAO5B,GAC7B,CAAC2B,MAAO,mBAAoBC,MAAO3B,GACnC,CAAC0B,MAAO,YAAaC,MAAO1B,GAC5B,CAACyB,MAAO,YAAaC,MAAO4C,IAGH3C,KAAI,SAACC,EAAIC,GAClC,OAAO,kBAACuB,GAAD,CAAuBtB,IAAKD,GAAG,kBAACvC,EAAD,KAAgBsC,EAAGH,OAAuBG,EAAGF,UAIvF,OACI,kBAACuB,GAAD,KACI,kBAAC,IAAMf,SAAP,KACI,kBAACmB,GAAD,KAAahE,GACZ6E,EACD,kBAACf,GAAD,KACK3B,MC/CV+C,G,2MCOXnE,MAAQ,IAAIxD,E,EAOZ8C,MAAQ,CACJ4C,KAAM,M,mFALNnB,KAAKoB,UACLpB,KAAKqB,MAAM1E,gB,gCAOH,IAAD,QAEP2E,EADoBtB,KAAKqB,MAAjBC,WAEH/B,MAAK,SAAA4B,GACFA,EAAKI,OAAS,EACd,EAAK/B,SAAS,CAAE2B,KAAMA,S,+BAKxB,IAAD,OACGA,EAASnB,KAAKzB,MAAd4C,KADH,EAE4BnB,KAAKqB,MAA9B1E,EAFH,EAEGA,YAAa6E,EAFhB,EAEgBA,QACfC,EAAkB,OAATN,EACXA,EAAKX,KAAI,SAAAC,GAAE,OAAI,kBAAC,GAAD,CACXiB,QAAS,SAACC,GAAD,OAAOhF,EAAYgF,IAC5BhB,IAAK,EAAK1B,MAAM2C,SAASnB,EAAG7E,KAC5BW,GAAI,EAAK0C,MAAM2C,SAASnB,EAAG7E,MAAO6E,EAAGhB,SACzC,kBAAC,EAAD,MAEEuB,EAAcQ,EAAU,kBAAC,GAAD,MAAkBC,EAEhD,OACI,kBAAC,GAAD,KACKT,O,GArCsBxF,aC0CxB6H,GAvCS,SAAC,GAAsB,IAArBjB,EAAoB,EAApBA,KAAMrC,EAAc,EAAdA,SAC5B,GAAoB,OAAhBqC,EAAKC,QAAoBD,EAAKE,QA2B3B,CACH,IAAMtB,EAAcoB,EAAKpD,MAAQ,kBAAC,EAAD,MAAkB,kBAAC,EAAD,MACnD,OACI,kBAAC8C,GAAD,CAAewB,WAAS,GACnBtC,GA/B+B,IAAD,EAEgEoB,EAAhGkB,UAAY7D,EAFoB,EAEpBA,KAAM8D,EAFc,EAEdA,MAAOC,EAFO,EAEPA,aAAcC,EAFP,EAEOA,KAAMlC,EAFb,EAEaA,OAAQmC,EAFrB,EAEqBA,SAAUC,EAF/B,EAE+BA,KAAMC,EAFrC,EAEqCA,WAAYrH,EAFjD,EAEiDA,GAAKO,EAAUsF,EAAVtF,OACvFgG,EACF,kBAACf,GAAD,CACIlB,QAAS,kBAAMd,KACf3C,IAAG,gEAA2Db,EAA3D,UACLwG,EAAYjG,EAAS,kBAAC,EAAD,CAAckG,SAAO,IAAKF,EAErD,OACI,kBAAChB,GAAD,KACI,kBAAC,IAAMf,SAAP,KACI,kBAACmB,GAAD,KAAazC,GACZsD,EACD,kBAACf,GAAD,KACI,kBAACC,GAAD,KAAuB,kBAAC9D,EAAD,gBAAuCoF,GAC9D,kBAACtB,GAAD,KAAuB,kBAAC9D,EAAD,uBAA8CqF,GACrE,kBAACvB,GAAD,KAAuB,kBAAC9D,EAAD,eAAsCsF,GAC7D,kBAACxB,GAAD,KAAuB,kBAAC9D,EAAD,iBAAwCoD,GAC/D,kBAACU,GAAD,KAAuB,kBAAC9D,EAAD,oBAA2CuF,GAClE,kBAACzB,GAAD,KAAuB,kBAAC9D,EAAD,eAAsCwF,GAC7D,kBAAC1B,GAAD,KAAuB,kBAAC9D,EAAD,qBAA4CyF,O,0UC7B3F,IAAMC,GAAY7I,IAAOC,IAAV,MAQT6I,GAAY9I,IAAOC,IAAV,MCTA8I,G,2MCiBX9E,MAAQ,IAAIxD,E,EAEZ8C,MAAQ,CACJ8D,OAAQ,GACR7D,OAAQ,GACR8E,UAAW,GACXtE,OAAO,EACPlC,QAAQ,EACRwF,SAAS,G,EAuEbxC,SAAW,WACP,EAAKN,SAAS,CACVR,OAAO,EACPsD,SAAS,K,yEAtEPX,EAAGW,GAAU,IAAD,OAClBtC,KAAKR,SAAS,CAAE8C,SAAS,IAEzB,IAAM/F,OAAWyH,IAANrC,GAAmBA,EAAEsC,OAAOC,aAAa,MAAQ,EAE5DlE,KAAKf,MAAM3C,UAAUC,GAAIgD,MAAK,SAAAkC,GAC1B,EAAKjC,SAAS,CACV6C,OAAQ,CACJ9F,GAAIA,EACJkD,KAAMgC,EAAOhC,KACb8C,OAAQd,EAAOc,OACfC,KAAMf,EAAOe,KACbC,UAAWhB,EAAO0C,WAClBzB,UAAWjB,EAAO2C,WAClBzB,SAAUlB,EAAO4C,UACjBzB,UAAWnB,EAAO6C,WAClBzB,OAAQpB,EAAOoB,QAEnBP,QAASA,OAEdzC,MAAMG,KAAKF,Y,gCAGR6B,EAAGW,GAAU,IAAD,OAClBtC,KAAKR,SAAS,CAAE8C,SAAS,IACzB,IAAM/F,OAAWyH,IAANrC,GAAmBA,EAAEsC,OAAOC,aAAa,MAAQ,EAExDlE,KAAKf,MAAMxC,UAAUF,GAAIgD,MAAK,SAAAf,GAC1B,EAAKgB,SAAS,CACVhB,OAAQ,CACJjC,GAAIA,EACJ2B,WAAYM,EAAOiB,KACnBhB,WAAYD,EAAOC,WACnBC,eAAgBF,EAAOkB,gBACvBf,SAAUH,EAAOG,SACjBC,cAAeJ,EAAOmB,eACtBd,QAASL,EAAOK,QAChBsE,QAAS3E,EAAO2E,QAChBoB,QAAS/F,EAAO+F,SAEpBjC,QAASA,OAEdzC,MAAMG,KAAKF,Y,kCAGV6B,EAAGW,GAAU,IAAD,OACpBtC,KAAKR,SAAS,CAAE8C,SAAS,IACzB,IAAM/F,OAAWyH,IAANrC,GAAmBA,EAAEsC,OAAOC,aAAa,MAAQ,EAE5DlE,KAAKf,MAAMtC,YAAYJ,GAAIgD,MAAK,SAAAiF,GAC5B,EAAKhF,SAAS,CACV8D,UAAW,CACP/G,GAAIA,EACJkD,KAAM+E,EAAS/E,KACf8D,MAAOiB,EAASjB,MAChBC,aAAcgB,EAAShB,aACvBC,KAAMe,EAASC,gBACflD,OAAQiD,EAASjD,OACjBmC,SAAUc,EAASE,uBACnBf,KAAMa,EAASb,KACfC,WAAYY,EAASZ,YAEzBtB,QAASA,OAEdzC,MAAMG,KAAKF,Y,iCAWdE,KAAKR,SAAS,CACV1C,QAAQ,M,+BAIN,IAAD,OAEL,OACI,kBAAC+G,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOc,KAAK,WACR,kBAACb,GAAD,KACI,kBAAC,GAAD,CACIxH,UAAW,SAACqF,EAAGW,GAAJ,OAAgB,EAAKhG,UAAUqF,GAAG,IAC7CL,QAAStB,KAAKf,MAAM7C,aACpBoF,QAASxB,KAAKzB,MAAMS,QACxB,kBAAC,GAAD,CAAee,SAAU,kBAAM,EAAKA,YAAYqC,KAAMpC,KAAKzB,UAGnE,kBAAC,IAAD,CAAOoG,KAAK,YACR,kBAACb,GAAD,KACI,kBAAC,GAAD,CACIrH,UAAW,SAACkF,EAAGW,GAAJ,OAAgB,EAAK7F,UAAUkF,GAAG,IAC7CL,QAAStB,KAAKf,MAAMzC,cACpBgF,QAASxB,KAAKzB,MAAMS,QACxB,kBAAC,GAAD,CAAee,SAAU,kBAAM,EAAKA,YAAYqC,KAAMpC,KAAKzB,UAGnE,kBAAC,IAAD,CAAOoG,KAAK,cACR,kBAACb,GAAD,KACI,kBAAC,GAAD,CACInH,YAAa,SAACgF,EAAGW,GAAJ,OAAgB,EAAK3F,YAAYgF,GAAG,IACjDL,QAAStB,KAAKf,MAAMvC,gBACpB8E,QAASxB,KAAKzB,MAAMS,QACxB,kBAAC,GAAD,CAAiBe,SAAU,kBAAM,EAAKA,YAAYqC,KAAMpC,KAAKzB,gB,GA7HxD/C,aCZjCoJ,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.af9924b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ErrorImage.1f010673.png\";","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 28px;\n  align-items: center;\n  padding-top: 20px;\n`;\n\nconst StyledHeaderLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ logo }) => logo ? 'lightgray' : 'deepskyblue'};\n  font-size: ${({ logo }) => logo ? '55px' : null};\n`;\n\nexport { StyledHeader, StyledHeaderLink }","import Header from \"./Header\";\nexport default Header;","import React, { Component } from 'react';\nimport { StyledHeader, StyledHeaderLink } from './Header.styled';\n\n\nexport default class Header extends Component{\n    render() {\n        return (\n            <StyledHeader>\n                <StyledHeaderLink logo='true' exact='true' to=\"/\">Swapi UI</StyledHeaderLink>\n                <StyledHeaderLink to=\"/people\">People</StyledHeaderLink>\n                <StyledHeaderLink to=\"/planets\">Planets</StyledHeaderLink>\n                <StyledHeaderLink to=\"/starships\">Starships</StyledHeaderLink>\n            </StyledHeader>\n        )\n    }\n}","import SwapiService from \"./SwapiService\";\nexport default SwapiService;","export default class SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    getResource = async (url) => {\n        const res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}` +\n                `, received ${res.status}`)\n        }\n        return await res.json();\n    };\n\n    getAllPeople = async () => {\n        const res = await this.getResource(`/people/`);\n        return res.results;\n    };\n\n    getPerson = async (id) => {\n        return this.getResource(`/people/${id}/`);\n    };\n\n    getAllPlanets = async () => {\n        const res = await this.getResource(`/planets/`);\n        return res.results;\n    };\n\n    getPlanet = async (id) => {\n        return await this.getResource(`/planets/${id}/`);\n    };\n\n    getAllStarships = async () => {\n        const res = await this.getResource(`/starships/`);\n        return res.results;\n    };\n\n    getStarship = async (id) => {\n        return await this.getResource(`/starships/${id}/`);\n    };\n\n    uniqueID(url) {\n        return url.match(/([0-9]*)\\/$/)[1]\n    };\n}\n","import styled from \"styled-components\";\n\nconst StyledError = styled.div`\n    display: inline-block;\n    position: ${({ broken }) => broken ? 'relative' : 'absolute'};\n    top: ${({ broken }) => broken ? '40%' : '50%'};\n    left: ${({ broken }) => broken ? '14%' : '50%'};\n    transform: translate(-50%, -50%);\n    width: ${({ broken }) => broken ? '36%' : null};\n    animation: fade 1s;\n    @keyframes fade {\n      0% {\n        opacity: 0;\n      }\n      100% {\n        opacity: 1;\n      }\n    }\n`;\n\nconst StyledErrorImg = styled.img`\n  width: 150px;\n  display: block;\n  margin: 0 auto;\n`;\n\nconst StyledErrorText = styled.h1`\n  font-size: 2em;\n  text-align: center;\n`;\n\n\nexport { StyledError, StyledErrorImg, StyledErrorText }","import React from 'react';\nimport { StyledError, StyledErrorImg, StyledErrorText } from './ErrorMessage.styled'\nimport icon from './ErrorImage.png'\n\nconst ErrorMessage = () => {\n    return (\n        <StyledError broken>\n            <StyledErrorImg src={icon} alt='error'/>\n            <StyledErrorText>Content Not Found</StyledErrorText>\n        </StyledError>\n    )\n};\n\nexport default ErrorMessage","import styled from \"styled-components\";\n\nconst StyledSpinnerWrapper = styled.div`\n  margin: 0 auto;\n  position:absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledSpinnerRingsWrapper = styled.div`\n  position: relative;\n  width: 77px !important;\n  height: 77px !important;\n  -webkit-transform: translate(-38.5px, -38.5px) scale(0.385) translate(38.5px, 38.5px);\n  transform: translate(-38.5px, -38.5px) scale(0.385) translate(38.5px, 38.5px);\n`;\n\nconst StyledSpinnerRings = styled.div`\n  position: absolute;\n  width: 160px;\n  height: 160px;\n  top: 20px;\n  left: 20px;\n  border-radius: 50%;\n  border: 8px solid #000;\n  border-color: #3d7ec0 transparent #3d7ec0 transparent;\n  -webkit-animation: lds-double-ring 1.5s linear infinite;\n  animation: lds-double-ring 1.5s linear infinite;\n  &:nth-child(2) {\n    width: 140px;\n    height: 140px;\n    top: 30px;\n    left: 30px;\n    border-color: transparent #cc4545 transparent #cc4545;\n    -webkit-animation: lds-double-ring_reverse 1.5s linear infinite;\n    animation: lds-double-ring_reverse 1.5s linear infinite;\n  }\n  @keyframes lds-double-ring {\n    0% {\n      -webkit-transform: rotate(0);\n      transform: rotate(0);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n\n  @-webkit-keyframes lds-double-ring {\n    0% {\n      -webkit-transform: rotate(0);\n      transform: rotate(0);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes lds-double-ring_reverse {\n    0% {\n      -webkit-transform: rotate(0);\n      transform: rotate(0);\n    }\n    100% {\n      -webkit-transform: rotate(-360deg);\n      transform: rotate(-360deg);\n    }\n  }\n  @-webkit-keyframes lds-double-ring_reverse {\n    0% {\n      -webkit-transform: rotate(0);\n      transform: rotate(0);\n    }\n    100% {\n      -webkit-transform: rotate(-360deg);\n      transform: rotate(-360deg);\n    }\n  }\n`;\n\nexport { StyledSpinnerWrapper, StyledSpinnerRingsWrapper, StyledSpinnerRings }\n\n\n","import Spinner from './Spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport { StyledSpinnerWrapper, StyledSpinnerRingsWrapper, StyledSpinnerRings } from './Spinner.styled';\n\nconst Spinner = (peopleList) => {\n  return (\n    <StyledSpinnerWrapper peopleList={peopleList} >\n      <StyledSpinnerRingsWrapper>\n        <StyledSpinnerRings></StyledSpinnerRings>\n        <StyledSpinnerRings></StyledSpinnerRings>\n      </StyledSpinnerRingsWrapper>\n    </StyledSpinnerWrapper>\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nconst StyledRandomPlanet = styled.div`\n  background: rgb(162, 179, 195, .1);\n  height: 340px;\n  border-radius: 10px;\n  margin-top: 30px;\n  display: flex;\n  position:relative;\n  align-items: center;\n`;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 272px;\n  justify-content: space-around;\n  width: 100%;\n  animation: fade 1s;\n  @keyframes fade {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledImg = styled.img`\n  border-radius: 10px;\n  margin-left: 40px;\n  width: 270px;\n  animation: fade 1s;\n  @keyframes fade {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledListItem = styled.li`\n  list-style: none;\n  font-size: ${({ planetName }) => planetName ? '58px' : '25px'};\n  line-height: ${({ planetName }) => !planetName ? '46px' : null};\n  &:nth-child(5) {\n    margin-top: 89px;\n  }\n`;\n\nconst StyledItemKey = styled.span`\n  opacity: .6;\n  margin-right: 5px;\n`;\n\nexport { StyledRandomPlanet, StyledList, StyledListItem, StyledImg, StyledItemKey }","import RandomPlanet from \"./RandomPlanet\";\nexport default RandomPlanet;","import React, { PureComponent } from 'react';\nimport SwapiService from \"../../Service\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\nimport Spinner from \"../Spinner\";\nimport { StyledRandomPlanet, StyledList, StyledListItem, StyledImg, StyledItemKey } from './RandomPlanet.styled';\n\nexport default class RandomPlanet extends PureComponent {\n\n    intervalID = 0;\n\n    componentDidMount() {\n        this.intervalID = setInterval(this.getUpdatePlanet, 4000);\n    }\n\n    componentWillUnmount() {\n        console.log('Unmounted');\n        clearInterval(this.intervalID);\n    }\n\n    state = {\n        planet: {\n            id: null,\n            planetName: null,\n            population: null,\n            rotationPeriod: null,\n            diameter: null,\n            orbitalPeriod: null,\n            climate: null,\n            surfaceWater: null\n        },\n        loading: true,\n        error: false,\n        broken: false\n    };\n\n    swapi = new SwapiService();\n\n    getUpdatePlanet = () => {\n        const randomID = Math.round(Math.random()*20 + 1);\n\n        this.swapi.getPlanet(randomID)\n            .then((res) => {\n\n                this.setState({\n                    planet: {\n                        id: randomID,\n                        planetName: res.name,\n                        population: res.population,\n                        rotationPeriod: res.rotation_period,\n                        diameter: res.diameter,\n                        orbitalPeriod: res.orbital_period,\n                        climate: res.climate,\n                        surfaceWater: res.surface_water\n                    },\n                    loading: false,\n                    broken: false\n                })\n            })\n            .catch(this.getError)\n    };\n\n    getError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    };\n\n    isBroken = () => {\n        this.setState({\n            broken: true\n        })\n    };\n\n    render() {\n\n        const { planet: { planetName, population, rotationPeriod, diameter, id,\n            orbitalPeriod, climate, surfaceWater }, loading, error, broken } = this.state;\n\n        const planetsData = [\n            {label: 'Population: ', value: population},\n            {label: 'Rotation Period: ', value: rotationPeriod},\n            {label: 'Diameter: ', value: diameter},\n            {label: 'Orbital Period: ', value: orbitalPeriod},\n            {label: 'Climate: ', value: climate},\n            {label: 'Surface Water: ', value: surfaceWater}\n        ];\n\n        const elements = planetsData.map((el, i) => {\n            return <StyledListItem key={i}><StyledItemKey>{ el.label }</StyledItemKey>{ el.value }</StyledListItem>\n        });\n\n        const ViewPlanet = () => {\n            return (\n                <React.Fragment>\n                    {isBroken}\n                    <StyledList>\n                        <StyledListItem planetName>{ planetName }</StyledListItem>\n                        {elements}\n                    </StyledList>\n                </React.Fragment>\n            )\n        };\n\n        const imageBlock = <StyledImg onError={this.isBroken} src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"Planet\"/>;\n\n        const isLoading = loading ? <Spinner/> : <ViewPlanet/>;\n        const viewMessage = (error && !loading) ? <ErrorMessage/> : isLoading;\n        const isBroken = broken ? <ErrorMessage/> : imageBlock;\n\n        return (\n            <StyledRandomPlanet>\n                {viewMessage}\n            </StyledRandomPlanet>\n        )\n    }\n}","import styled from \"styled-components\";\n\nconst StyledList = styled.div`\n  width: 45%;\n  position: relative;\n  margin-top: 40px;\n  height: fit-content;\n  background: rgb(162, 179, 195, .1);\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledListItem = styled.span`\n  padding: 10px 20px;\n  border-bottom: 1px solid rgb(162, 179, 195);\n  transition: .3s;\n  font-size: 1.5em;\n  &:last-of-type {\n    border-bottom: none;\n  }\n  &:hover {\n    background: rgb(162, 179, 195, .3);\n    color: white;\n    cursor: pointer;\n    &:first-of-type {\n      border-radius: 10px 10px 0 0;\n    }\n    &:last-of-type {\n      border-radius: 0 0 10px 10px;\n    }\n  }\n`;\n\n\nexport { StyledList, StyledListItem }","import ErrorMessage from \"./ErrorMessage\";\nexport default ErrorMessage;","import PeopleList from \"./PeopleList\";\nexport default PeopleList;","import React, { Component } from 'react';\nimport SwapiService from \"../../Service\";\nimport { StyledList, StyledListItem } from './PeopleList.styled';\nimport Spinner from \"../Spinner\";\nimport ErrorMessage from \"../ErrorMessage\";\n\nexport default class PeopleList extends Component {\n\n    swapi = new SwapiService();\n\n    componentDidMount() {\n        this.getItem();\n        this.props.getPerson()\n    }\n\n    state = {\n        item: null\n    };\n\n    getItem()  {\n        const { getData } = this.props;\n        getData()\n            .then(item => {\n                item.length = 7;\n                this.setState({ item: item })\n            })\n    };\n\n\n    render() {\n\n        const { item } = this.state;\n        const { getPerson, isError } = this.props;\n        const person = item !== null ?\n                item.map(el => <StyledListItem\n                    onClick={(e) => getPerson(e)}\n                    key={this.swapi.uniqueID(el.url)}\n                    id={this.swapi.uniqueID(el.url)}>{el.name}</StyledListItem>) :\n                <Spinner poepleList/>;\n\n        const viewMessage = isError ? <ErrorMessage/> : person;\n\n        return (\n            <StyledList>\n                {viewMessage}\n            </StyledList>\n        )\n\n    }\n}","import styled from \"styled-components\";\n\nconst StyledDetails = styled.div`\n  width: 45%;\n  min-height: 406px;\n  border-radius: 10px;\n  background: rgb(162, 179, 195, .1);\n  margin-top: 40px;\n  display: inline-block;\n  box-sizing: border-box;\n  position:relative;\n  padding: 30px;\n  animation: fade 1s;\n  @keyframes fade {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledDetailsImg = styled.img`\n  width: 40%;\n  border-radius: 5px;\n`;\n\nconst StyledDetailsList = styled.ul`\n  vertical-align: top;\n  display: inline-block;\n  font-size: 1.3em;\n  margin: 0;\n  width: 268px;\n  padding-left: 20px;\n  box-sizing: border-box;\n`;\n\nconst StyledDetailsListItem = styled.li`\n  list-style: none;\n  line-height: 1.92;\n`;\n\nconst StyledName = styled.h1`\n  margin: 0 0 10px 0;\n  width: 100%;\n`;\n\nexport { StyledDetails, StyledDetailsImg, StyledDetailsList, StyledDetailsListItem, StyledName }","import PeopleDetails from './PeopleDetails'\nexport default PeopleDetails;","import React from 'react';\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nimport { StyledDetails, StyledDetailsImg, StyledDetailsList, StyledDetailsListItem, StyledName } from './PeopleDetails.styled';\nimport { StyledItemKey } from '../RandomPlanet/RandomPlanet.styled';\nimport Spinner from \"../Spinner\";\n\n\nconst PeopleDetails = ({data, isBroken}) => {\n    if (data.people !== null && !data.pending) {\n\n        const {people: {name, height, mass, hairColor, skinColor, eyeColor, birthYear, gender, id}, broken} = data;\n        const serverImage =\n            <StyledDetailsImg\n                onError={() => isBroken()}\n                src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}/>;\n        const brokenImg = broken ? <ErrorMessage details/> : serverImage;\n\n        return (\n            <StyledDetails>\n                <React.Fragment>\n                    <StyledName>{name}</StyledName>\n                    {brokenImg}\n                    <StyledDetailsList>\n                        <StyledDetailsListItem><StyledItemKey>Height: </StyledItemKey>{height}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Mass: </StyledItemKey>{mass}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Hair color: </StyledItemKey>{hairColor}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Skin color: </StyledItemKey>{skinColor}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Eye color: </StyledItemKey>{eyeColor}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Birth year: </StyledItemKey>{birthYear}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Gender: </StyledItemKey>{gender}</StyledDetailsListItem>\n                    </StyledDetailsList>\n                </React.Fragment>\n            </StyledDetails>\n        )\n\n    } else {\n        const viewMessage = data.error ? <ErrorMessage/> : <Spinner/>;\n        return (\n            <StyledDetails>\n                {viewMessage}\n            </StyledDetails>\n            )\n    }\n};\n\n\nexport default PeopleDetails;","import PlanetList from \"./PlanetList\";\nexport default PlanetList;","import React, {Component} from 'react';\nimport { StyledList, StyledListItem } from '../PeopleList/PeopleList.styled';\nimport SwapiService from \"../../Service\";\nimport Spinner from \"../Spinner\";\nimport ErrorMessage from \"../ErrorMessage\";\n\nclass PlanetList extends Component {\n\n    swapi = new SwapiService();\n\n    componentDidMount() {\n        this.getItem();\n        this.props.getPlanet()\n    }\n\n    state = {\n        item: null\n    };\n\n    getItem()  {\n        const { getData } = this.props;\n        getData()\n            .then(item => {\n                item.length = 7;\n                this.setState({ item: item })\n            })\n    };\n\n    render() {\n        const { item } = this.state;\n        const { getPlanet, isError } = this.props;\n        const planet = item !== null ?\n            item.map(el => <StyledListItem\n                onClick={(e) => getPlanet(e)}\n                key={this.swapi.uniqueID(el.url)}\n                id={this.swapi.uniqueID(el.url)}>{el.name}</StyledListItem>) :\n            <Spinner poepleList/>;\n\n        const viewMessage = isError ? <ErrorMessage/> : planet;\n\n        return (\n            <StyledList>\n                {viewMessage}\n            </StyledList>\n        )\n    }\n}\n\nexport default PlanetList;","import PlanetDetails from \"./PlanetDetails\";\nexport default PlanetDetails;","import React from 'react';\nimport {\n    StyledDetails,\n    StyledDetailsImg,\n    StyledDetailsList,\n    StyledDetailsListItem,\n    StyledName\n} from \"../PeopleDetails/PeopleDetails.styled\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport { StyledItemKey } from \"../RandomPlanet/RandomPlanet.styled\";\nimport Spinner from \"../Spinner\";\n\nconst PlanetDetails = ({ data, isBroken }) => {\n    if (data.planet !== null && !data.pending) {\n        const {\n            planet: {\n                planetName, population, rotationPeriod,\n                diameter, orbitalPeriod, climate, gravity, id\n            }, broken\n        } = data;\n\n        const serverImage =\n            <StyledDetailsImg\n                planet\n                onError={() => isBroken()}\n                src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>;\n        const brokenImg = broken ? <ErrorMessage details/> : serverImage;\n\n        const planetsData = [\n            {label: 'Population: ', value: population},\n            {label: 'Rotation Period: ', value: rotationPeriod},\n            {label: 'Diameter: ', value: diameter},\n            {label: 'Orbital Period: ', value: orbitalPeriod},\n            {label: 'Climate: ', value: climate},\n            {label: 'Gravity: ', value: gravity}\n        ];\n\n        const elements = planetsData.map((el, i) => {\n            return <StyledDetailsListItem key={i}><StyledItemKey>{el.label}</StyledItemKey>{el.value}\n            </StyledDetailsListItem>\n        });\n\n        return (\n            <StyledDetails>\n                <React.Fragment>\n                    <StyledName>{planetName}</StyledName>\n                    {brokenImg}\n                    <StyledDetailsList>\n                        {elements}\n                    </StyledDetailsList>\n                </React.Fragment>\n            </StyledDetails>\n        )\n    } else {\n        const viewMessage = data.error ? <ErrorMessage/> : <Spinner/>;\n        return (\n            <StyledDetails>\n                {viewMessage}\n            </StyledDetails>\n        )\n    }\n};\n\nexport default PlanetDetails;","import Starships from \"./Starships\";\nexport default Starships;","import React, { Component } from 'react';\nimport SwapiService from \"../../Service\";\nimport { StyledList, StyledListItem } from '../PeopleList/PeopleList.styled';\nimport Spinner from \"../Spinner\";\nimport ErrorMessage from \"../ErrorMessage\";\n\nexport default class Starships extends Component {\n\n    swapi = new SwapiService();\n\n    componentDidMount() {\n        this.getItem();\n        this.props.getStarship()\n    }\n\n    state = {\n        item: null\n    };\n\n    getItem()  {\n        const { getData } = this.props;\n        getData()\n            .then(item => {\n                item.length = 9;\n                this.setState({ item: item })\n            })\n    };\n\n\n    render() {\n        const { item } = this.state;\n        const { getStarship, isError } = this.props;\n        const person = item !== null ?\n            item.map(el => <StyledListItem\n                onClick={(e) => getStarship(e)}\n                key={this.swapi.uniqueID(el.url)}\n                id={this.swapi.uniqueID(el.url)}>{el.name}</StyledListItem>) :\n            <Spinner />;\n\n        const viewMessage = isError ? <ErrorMessage/> : person;\n\n        return (\n            <StyledList>\n                {viewMessage}\n            </StyledList>\n        )\n    }\n}","import React from 'react';\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nimport { StyledDetails, StyledDetailsImg, StyledDetailsList,\n    StyledDetailsListItem, StyledName } from '../PeopleDetails/PeopleDetails.styled';\nimport { StyledItemKey } from '../RandomPlanet/RandomPlanet.styled';\nimport Spinner from \"../Spinner\";\n\n\nconst StarshipDetails = ({data, isBroken}) => {\n    if (data.people !== null && !data.pending) {\n\n        const {starships: {name, model, manufacturer, cost, length, maxSpeed, crew, passengers, id}, broken} = data;\n        const serverImage =\n            <StyledDetailsImg\n                onError={() => isBroken()}\n                src={`https://starwars-visualguide.com/assets/img/starships/${id}.jpg`}/>;\n        const brokenImg = broken ? <ErrorMessage details/> : serverImage;\n\n        return (\n            <StyledDetails>\n                <React.Fragment>\n                    <StyledName>{name}</StyledName>\n                    {brokenImg}\n                    <StyledDetailsList>\n                        <StyledDetailsListItem><StyledItemKey>Model: </StyledItemKey>{model}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Manufacturer: </StyledItemKey>{manufacturer}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Cost: </StyledItemKey>{cost}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Length: </StyledItemKey>{length}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Max Speed: </StyledItemKey>{maxSpeed}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Crew: </StyledItemKey>{crew}</StyledDetailsListItem>\n                        <StyledDetailsListItem><StyledItemKey>Passengers: </StyledItemKey>{passengers}</StyledDetailsListItem>\n                    </StyledDetailsList>\n                </React.Fragment>\n            </StyledDetails>\n        )\n\n    } else {\n        const viewMessage = data.error ? <ErrorMessage/> : <Spinner/>;\n        return (\n            <StyledDetails starships>\n                {viewMessage}\n            </StyledDetails>\n        )\n    }\n};\n\n\nexport default StarshipDetails;","import styled from \"styled-components\";\n\nconst StyledApp = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  height: 100vh;\n  color: rgb(162, 179, 195);\n  font-family: fantasy;\n`;\n\nconst StyledRow = styled.div`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport { StyledApp, StyledRow }","import App from \"./App\";\nexport default App;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from \"../Header\";\nimport RandomPlanet from \"../RandomPlanet\";\nimport PeopleList from \"../PeopleList\";\nimport PeopleDetails from '../PeopleDetails';\nimport PlanetList from \"../PlanetList\";\nimport PlanetDetails from \"../PlanetDetails\";\nimport Starships from \"../Starships\";\nimport SwapiService from \"../../Service\";\nimport StarshipDetails from \"../StarshipDetails/StarshipDetails\";\n\nimport { StyledApp, StyledRow } from './App.styled'\n\n\nexport default class App extends Component {\n\n    swapi = new SwapiService();\n\n    state = {\n        people: {},\n        planet: {},\n        starships: {},\n        error: false,\n        broken: false,\n        pending: true\n    };\n\n\n    getPerson(e, pending) {\n        this.setState({ pending: true });\n\n        const id = e !== undefined ? +e.target.getAttribute('id') : 1;\n\n        this.swapi.getPerson(id).then(person => {\n            this.setState({\n                people: {\n                    id: id,\n                    name: person.name,\n                    height: person.height,\n                    mass: person.mass,\n                    hairColor: person.hair_color,\n                    skinColor: person.skin_color,\n                    eyeColor: person.eye_color,\n                    birthYear: person.birth_year,\n                    gender: person.gender\n                },\n                pending: pending\n            })\n        }).catch(this.getError)\n    };\n\n    getPlanet(e, pending) {\n        this.setState({ pending: true });\n        const id = e !== undefined ? +e.target.getAttribute('id') : 2;\n\n            this.swapi.getPlanet(id).then(planet => {\n                this.setState({\n                    planet: {\n                        id: id,\n                        planetName: planet.name,\n                        population: planet.population,\n                        rotationPeriod: planet.rotation_period,\n                        diameter: planet.diameter,\n                        orbitalPeriod: planet.orbital_period,\n                        climate: planet.climate,\n                        gravity: planet.gravity,\n                        terrain: planet.terrain\n                    },\n                    pending: pending\n                })\n            }).catch(this.getError)\n    };\n\n    getStarship(e, pending) {\n        this.setState({ pending: true });\n        const id = e !== undefined ? +e.target.getAttribute('id') : 5;\n\n        this.swapi.getStarship(id).then(starship => {\n            this.setState({\n                starships: {\n                    id: id,\n                    name: starship.name,\n                    model: starship.model,\n                    manufacturer: starship.manufacturer,\n                    cost: starship.cost_in_credits,\n                    length: starship.length,\n                    maxSpeed: starship.max_atmosphering_speed,\n                    crew: starship.crew,\n                    passengers: starship.passengers\n                },\n                pending: pending\n            })\n        }).catch(this.getError)\n    }\n\n    getError = () => {\n        this.setState({\n            error: true,\n            pending: false\n        })\n    };\n\n    isBroken() {\n        this.setState({\n            broken: true\n        })\n    };\n\n    render() {\n\n        return (\n            <StyledApp>\n                <Router>\n                    <Header/>\n                    <RandomPlanet/>\n                    <Route path='/people'>\n                        <StyledRow>\n                            <PeopleList\n                                getPerson={(e, pending) => this.getPerson(e, false)}\n                                getData={this.swapi.getAllPeople}\n                                isError={this.state.error}/>\n                            <PeopleDetails isBroken={() => this.isBroken()} data={this.state}/>\n                        </StyledRow>\n                    </Route>\n                    <Route path='/planets'>\n                        <StyledRow>\n                            <PlanetList\n                                getPlanet={(e, pending) => this.getPlanet(e, false)}\n                                getData={this.swapi.getAllPlanets}\n                                isError={this.state.error}/>\n                            <PlanetDetails isBroken={() => this.isBroken()} data={this.state}/>\n                        </StyledRow>\n                    </Route>\n                    <Route path='/starships'>\n                        <StyledRow>\n                            <Starships\n                                getStarship={(e, pending) => this.getStarship(e, false)}\n                                getData={this.swapi.getAllStarships}\n                                isError={this.state.error}/>\n                            <StarshipDetails isBroken={() => this.isBroken()} data={this.state}/>\n                        </StyledRow>\n                    </Route>\n                </Router>\n            </StyledApp>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}